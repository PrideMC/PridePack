name: Draft a release
run-name: Build encrypted pack with mcrputil and Draft a release
on:
  push:
jobs:
 build-pack:
   runs-on: ubuntu-latest
   if: "startsWith(github.event.head_commit.message, 'Release ')"
   outputs:
      upload_url: ${{ steps.step_upload_url.outputs.upload_url }}
   steps:
     - name: Checkout the repository.
       uses: actions/checkout@v3
     - name: Create & move files on seperate directory
       run: mkdir PridePack & mv * PridePack/
     - name: Download mcrputil.
       run: "curl -sL https://github.com/valaphee/mcrputil/releases/latest/download/mcrputil -o mcrputil"
     - name: chmod the mcrputil and create dist directory
       run: "chmod +x ./mcrputil & mkdir PridePack.dist"
     - name: Build artifact
       run: "./mcrputil encrypt PridePack/ PridePack.dist/"
     - name: Create upload file and Archive files
       run: "mkdir upload && zip -r ./upload/PridePack.mcpack ./PridePack.dist/ -x .git/*"
     - name: Move encryption key.
       run: "mv ./PridePack.dist/.key ./upload/PridePack.key"
     - name: Generate release body markdown
       run: "echo \"<hr><br><center><p align=\"center\"><b>This pack is being encrypted.</b><br><code>$(cat ./upload/PridePack.key)</code></p></center><br><hr>\" >> ./upload/release_body.md"
     - name: Release Package
       id: create_release
       uses: ChanTsune/release-with-commit@v2.8.0
       with:
          regexp: "Release ((\\d+([.]\\d+)*)-(alpha|beta|rc)\\d*)((\\s|\\S)*)"
          regexp_options: "us"
          release_name: "PridePack v$1"
          tag_name: "v$1"
          body_path: "./upload/release_body.md"
          draft: false
          prerelease: false
       env:
          GITHUB_TOKEN: '${{ secrets.GITHUB_TOKEN }}' # This token is provided by Actions, you do not need to create your own token
     - name: Upload Release Assets
       id: upload-release-asset 
       uses: actions/upload-release-asset@v1
       env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
       with:
          upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
          asset_path: ./upload/PridePack.mcpack
          asset_name: PridePack.mcpack
          asset_content_type: application/zip
     - name: Codespace Cleanup
       run: "rm -rf *"
